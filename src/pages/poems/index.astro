---
import Layout from '../../layouts/Layout.astro';
// import PoemCard from '../../components/PoemCard.astro';
// import PoemPagination from '../../components/PoemPagination.astro';
import { client } from '../../../lib/sanity';
import imageUrlBuilder from '@sanity/image-url';

const fetchCMS = await client.fetch('*[_type == "poems"] | order(date_published desc)');

const builder = imageUrlBuilder(client);

const pageInfo = {
    title: 'Poems by Psoems',
    description: 'List of poems created from the heart of a Christ-believing guy walking in this life',
    canonical: 'https://www.psoems.com/poems/',
    robots: 'index, follow',
    url: Astro.url,
};

// const test = await fetchCMS.map((poem_data) => {
//     return {
//         params: {
//             song_name: poem_data.title_slug
//         },
//         props: { poem_data },
//     };
// });

// console.log(test[0].props.poem_data.thumbnail.asset._ref.split('-')[2].split('x'));

// Data Fetching: List all Markdown posts in the repo.
// const pageSize = 12;
// const allRawPosts = Array.from(await Astro.glob('./*.mdx')).sort((a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf());
// const allPosts = allRawPosts.slice(0, pageSize);
// const tags = [...new Set(allRawPosts.map((post) => post.frontmatter.tags).flat())];
---

<Layout pageInfo={pageInfo}>
    <div class="mt-3 max-w-screen-xl mx-auto">
        <h1 class="text-4xl text-center font-bold mb-8">Poems</h1>
        <div class="grid grid-cols-12 mb-6 gap-y-12">
            {
                fetchCMS.map((poem_data, index, array) => (
                    <div class="col-span-12 md:col-span-6 xl:col-span-4 px-6 xl:px-4">
                        <div class="h-full" style="background-color:var(--bg-card)">
                            <div>
                                <a href={`/poems/${poem_data.title_slug}`}>
                                    <img src={builder.image(poem_data.thumbnail).url()} class="w-full" alt={poem_data.thumbnail.caption} width={poem_data.thumbnail.asset._ref.split('-')[2].split('x')[0]} height={poem_data.thumbnail.asset._ref.split('-')[2].split('x')[1]} loading="lazy" />
                                </a>
                            </div>
                            <div class="px-3 py-4">
                                <a class="block mb-1" href={`/poems/${poem_data.title_slug}`}>
                                    <h2 class="text-xl font-bold">{poem_data.title}</h2>
                                </a>
                                <p class="text-sm mb-3">{poem_data.description}</p>
                                <div class="-mx-1">
                                    {/* console.log(poem_data.tags) */}
                                    {poem_data.tags.map((item) => (
                                        <a href={`/poems/tags/${item.toLowerCase()}`} class={`px-2 py-1 m-1 inline-block text-xs tag-topic-${item.toLowerCase()}`} style="background-color:var(--border-input-color)">
                                            {item}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        </div>
                        {/* array.length > index + 1 && <hr class="border-neutral-700 my-6" /> */}
                    </div>
                ))
            }
        </div>
        {/*<PoemPagination currentPage={1} lastPage={Math.ceil(allRawPosts.length / (pageSize))} requestPageUrlPath={Astro.url.pathname.split('/')[1]} />*/}
    </div>
</Layout>
